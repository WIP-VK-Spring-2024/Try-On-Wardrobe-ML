# Service
API__INSTANCE_APP_NAME="model-api"
IS_PROD=False

# Server
API__PORT=8000
API__TRUSTED='*'
API__X_ACCESS_TOKEN=123

# POSTGRES
RESOURCES__POSTGRES__HOST=postgres_test
RESOURCES__POSTGRES__PORT=5432
RESOURCES__POSTGRES__DATABASE_NAME={{POSTGRES_DATABASE_NAME}}
RESOURCES__POSTGRES__USER={{POSTGRES_USER}}
RESOURCES__POSTGRES__PASSWORD={{POSTGRES_PASSWORD}}
RESOURCES__POSTGRES__MIN_CONNECTION=100
RESOURCES__POSTGRES__MAX_CONNECTION=1000

# RABBIT
RESOURCES__RABBITMQ__HOST=rabbitmq
RESOURCES__RABBITMQ__PORT=5672
RESOURCES__RABBITMQ__USER={{RABBIT_USER}}
RESOURCES__RABBITMQ__PASSWORD={{RABBIT_PASSWORD}}
RESOURCES_RABBIT_DATA_VOLUME=./volume/rabbitmq

# Logger
LOGGER__LEVEL=INFO
LOGGER__FOLDER_PATH=./volume/logs/logs.log

# Amazon S3
AWS__ACCESS_KEY_ID=secret-key-id
AWS__SECRET_ACCESS_KEY=secret-access-key
AWS__ENDPOINT_URL="https://hb.ru-msk.vkcs.cloud"
AWS__BUCKET_NAME=bucket


# Filesystem
API_FILESYSTEM_FOLDER=./volume/storage

# DIRS
CLOTHES_DIR=clothes
TRY_ON_DIR=try_on
CUT_DIR=cut

# ML
ML__WEIGHTS_PATH=/usr/src/ml_weights
ML__META_SAVE=./volume/ml_meta

ML__TRY_ON_TASK_QUEUE="try_on"
ML__TRY_ON_RESPONSE_QUEUE="try_on_response"
ML__CUT_TASK_QUEUE="cut"
ML__CUT_RESPONSE_QUEUE="cut_response"
ML__OUTFIT_GEN_TASK_QUEUE="outfit_gen"
ML__OUTFIT_GEN_RESPONSE_QUEUE="outfit_gen_response"
ML__RECSYS_TASK_QUEUE="recsys"
ML__RECSYS_RESPONSE_QUEUE="recsys_response"

# Config models
# if True, cut model requires ~ 1 GB GPU of memory
# if False, cut model requires ~ 8 GB GPU of memory
ML__IS_CUT_LIGHT_WEIGHT=False

DATA_VOLUME=./volume
